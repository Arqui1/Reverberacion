module Alu_tb();


logic [31:0] op1, op2,result;
logic [2:0] ALUControl;
logic flagCero,flagNegative,flagCarry,flagOverflow;



ALU #(32) DUT( op1,op2,ALUControl,result,flagCero, flagNegative, flagCarry, flagOverflow);


initial
	begin
	op1 = 32'h7; //Suma 7+2
	op2 = 32'h2;
	ALUControl = 3'b000;
	
	#10
	op1 = 32'h7; //Resta 7-2
	op2 = 32'h2;
	ALUControl = 3'b001;
	
	#10
	op1 = 32'd10; //div 10/2
	op2 = 32'd2;
	ALUControl = 3'b010;
	
	#10
	op1 = 32'd3; //mult 3*2
	op2 = 32'd2;
	ALUControl = 3'b011;
	
	#10
	op1 = 32'b11111; //shift left 5
	op2 = 32'd5;
	ALUControl = 3'b100;
	
	#10
	op1 = 32'b11111; //shift right 5
	op2 = 32'd5;
	ALUControl = 3'b101;
	
	#10
	op1 = 32'd10; // 10 <= 5  => 0
	op2 = 32'd5;
	ALUControl = 3'b110;
	
	#10
	op1 = 32'd5; // 5 <= 5  => 1
	op2 = 32'd5;
	ALUControl = 3'b110;
	
	#10
	op1 = 32'd2; // 2 <= 5  => 1
	op2 = 32'd5;
	ALUControl = 3'b110;
	
	#10
	op1 = 32'd7; // 7 % 2  => 1
	op2 = 32'd2;
	ALUControl = 3'b111;
	

	end

endmodule
